[{"/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/index.tsx":"1","/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/reportWebVitals.ts":"2","/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/App.tsx":"3","/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/Map.tsx":"4","/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/footer.tsx":"5","/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/navbar.tsx":"6","/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/pieChart.tsx":"7","/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/setlistPie.tsx":"8"},{"size":464,"mtime":1686184823195,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1686053620863,"results":"11","hashOfConfig":"10"},{"size":8041,"mtime":1686403399017,"results":"12","hashOfConfig":"10"},{"size":4999,"mtime":1686320554816,"results":"13","hashOfConfig":"10"},{"size":484,"mtime":1686238935748,"results":"14","hashOfConfig":"10"},{"size":1070,"mtime":1686316870123,"results":"15","hashOfConfig":"10"},{"size":1471,"mtime":1686401497661,"results":"16","hashOfConfig":"10"},{"size":1165,"mtime":1686401503571,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1g8hrh",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/index.tsx",[],[],[],"/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/reportWebVitals.ts",[],[],"/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/App.tsx",["45","46","47","48","49","50","51","52","53","54","55","56","57","58","59"],[],"/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/Map.tsx",["60","61"],[],"import React, { useEffect, useState } from 'react';\nimport L, { Marker } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nimport markerIcon from './marker-icon.png';\nimport futureIcon from './future-marker-icon.png';\nimport completedIcon from './completed-marker-icon.png';\nimport redIcon from './redIcon.png';\nimport markerData from './data/usa.json';\n\ninterface MarkerData {\n  lat: number;\n  lon: number;\n  city: string;\n  date: string;\n  shows: number;\n  openers: [string];\n}\n\nconst MapComponent: React.FC = () => {\n  const [map, setMap] = useState<L.Map | null>(null);\n  const [markers, setMarkers] = useState<Marker[]>([]);\n\n  useEffect(() => {\n    const newMap = L.map('map').setView([37.0902, -95.7129], 4);\n    \n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Map data &copy; OpenStreetMap contributors',\n      minZoom: 0,\n      maxZoom: 15,\n    }).addTo(newMap);\n\n    const customIcon = L.icon({\n      iconUrl: markerIcon,\n      iconSize: [60, 60],\n      iconAnchor: [30, 50],\n      popupAnchor: [-3, -76],\n    });\n\n    const sortedMarkerData = [...markerData].sort(\n      (a, b) => new Date(a.date).getTime() - new Date(b.date).getTime()\n    );\n\n    const newMarkers: Marker[] = [];\n    sortedMarkerData.forEach((marker, index) => {\n      const { lat, lon, city, date, shows, openers } = marker;\n      const markerOptions: L.MarkerOptions = {\n        icon: customIcon,\n      };\n\n      const currentDate = new Date();\n      const markerDate = new Date(date);\n\n      if (markerDate <= currentDate) {\n        markerOptions.icon = L.icon({\n          ...customIcon.options,\n          iconUrl: completedIcon,\n        });\n\n      } else if (markerDate ==  currentDate){\n        markerOptions.icon = L.icon({\n          ...customIcon.options,\n          iconUrl: redIcon,\n        });\n\n      }\n      else {\n        markerOptions.icon = L.icon({\n          ...customIcon.options,\n          iconUrl: futureIcon,\n        });\n      }\n\n      const GAYLE = \"./images/gayle.png\";\n      const PB = \"./images/PhoebeBridgers.png\";\n      const paramore = \"./images/paramore.png\";\n      const red =\"./images/girl_in_red.png\";\n      const muna =\"./images/muna.png\";\n      const ga = \"./images/gracieAbrams.png\";\n      const haim =\"./images/haim.png\";\n      const bbdb = \"./images/bbdb.png\";\n      const owenn =\"./images/owenn.png\";\n\n      const getOpenerIcons = (openers: string[]) => {\n        const openerIcons = openers.map((opener, index) => {\n          let icon = null;\n\n          switch (opener) {\n            case 'GAYLE':\n              icon = `<img src=${GAYLE} alt=\"Gayle\" width=\"90px\" style=\"padding:3px\"/>`;\n              break;\n            case 'girl in red':\n              icon = `<img src=${red} alt=\"girl in red\" width=\"60px\" style=\"padding:3px\"/>`;\n              break;\n            case 'Phoebe Bridgers':\n              icon = `<img src=${PB} alt=\"Phoebe Bridgers\" width=\"190px\" style=\"padding:3px\" />`;\n              break;\n            case 'Paramore':\n              icon = `<img src=${paramore} alt=\"paramore\" width=\"80px\" style=\"padding:3px\" />`;\n              break;\n            case 'MUNA':\n              icon = `<img src=${muna} alt=\"muna\" width=\"80px\" style=\"padding:3px\"/>`;\n              break;\n            case 'Gracie Abrams':\n              icon = `<img src=${ga} alt=\"gracie abrams\" width=\"2000px\" style=\"padding:3px\" />`;\n              break;\n            case 'HAIM':\n                icon = `<img src=${haim} alt=\"haim\" width=\"80px\" style=\"padding:3px\"/>`;\n                break;\n            case 'beabadobee':\n                icon = `<img src=${bbdb} alt=\"bbdb\" width=\"80px\"style=\"padding:3px\" />`;\n                break;\n            case 'OWENN':\n                icon = `<img src=${owenn} alt=\"owenn\" width=\"80px\" style=\"padding:3px\"/>`;\n                break;\n          }\n\n          return icon;\n        });\n\n        return openerIcons.join('');\n      };\n\n      const openerIcons = getOpenerIcons(openers);\n      const mapMarker = new Marker([lat, lon], markerOptions).bindPopup(`\n          <div style=\"background-color: silver; font-family: nine; color: white; padding: 10px; margin-bottom: 10px;\">\n        \n          <b>${city}</b><br />\n          Date: ${date}<br />\n          Shows: ${shows}<br />\n          ${openerIcons}\n        </div>\n      `);\n\n      newMarkers.push(mapMarker);\n    });\n\n    setMarkers(newMarkers);\n    setMap(newMap);\n\n    return () => {\n      newMap.remove();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (map) {\n      let currentIndex = 0;\n      const interval = setInterval(() => {\n        if (currentIndex >= markers.length) {\n          clearInterval(interval);\n          return;\n        }\n\n        markers[currentIndex].addTo(map);\n        currentIndex++;\n      }, 350);\n\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [map, markers]);\n\n  return (\n    <div>\n      <div id=\"map\" style={{ height: '500px', width: '100%' }}></div>\n    </div>\n  );\n};\n\nexport default MapComponent;\n",[],"/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/footer.tsx",[],[],"/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/navbar.tsx",[],[],"/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/pieChart.tsx",[],[],"/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/setlistPie.tsx",["62"],[],{"ruleId":"63","severity":1,"message":"64","line":6,"column":8,"nodeType":"65","messageId":"66","endLine":6,"endColumn":9},{"ruleId":"63","severity":1,"message":"67","line":7,"column":10,"nodeType":"65","messageId":"66","endLine":7,"endColumn":18},{"ruleId":"63","severity":1,"message":"68","line":11,"column":11,"nodeType":"65","messageId":"66","endLine":11,"endColumn":21},{"ruleId":"63","severity":1,"message":"69","line":30,"column":9,"nodeType":"65","messageId":"66","endLine":30,"endColumn":11},{"ruleId":"63","severity":1,"message":"70","line":40,"column":9,"nodeType":"65","messageId":"66","endLine":40,"endColumn":29},{"ruleId":"71","severity":1,"message":"72","line":82,"column":15,"nodeType":"73","endLine":82,"endColumn":64},{"ruleId":"71","severity":1,"message":"72","line":104,"column":13,"nodeType":"73","endLine":104,"endColumn":116},{"ruleId":"71","severity":1,"message":"72","line":105,"column":13,"nodeType":"73","endLine":105,"endColumn":114},{"ruleId":"71","severity":1,"message":"72","line":106,"column":13,"nodeType":"73","endLine":106,"endColumn":115},{"ruleId":"71","severity":1,"message":"72","line":107,"column":13,"nodeType":"73","endLine":107,"endColumn":115},{"ruleId":"71","severity":1,"message":"72","line":108,"column":13,"nodeType":"73","endLine":108,"endColumn":119},{"ruleId":"71","severity":1,"message":"72","line":109,"column":13,"nodeType":"73","endLine":109,"endColumn":127},{"ruleId":"71","severity":1,"message":"72","line":110,"column":13,"nodeType":"73","endLine":110,"endColumn":114},{"ruleId":"71","severity":1,"message":"72","line":111,"column":13,"nodeType":"73","endLine":111,"endColumn":115},{"ruleId":"71","severity":1,"message":"72","line":112,"column":13,"nodeType":"73","endLine":112,"endColumn":116},{"ruleId":"63","severity":1,"message":"68","line":11,"column":11,"nodeType":"65","messageId":"66","endLine":11,"endColumn":21},{"ruleId":"74","severity":1,"message":"75","line":61,"column":29,"nodeType":"76","messageId":"77","endLine":61,"endColumn":31},{"ruleId":"63","severity":1,"message":"78","line":3,"column":52,"nodeType":"65","messageId":"66","endLine":3,"endColumn":58},"@typescript-eslint/no-unused-vars","'L' is defined but never used.","Identifier","unusedVar","'PieChart' is defined but never used.","'MarkerData' is defined but never used.","'sc' is assigned a value but never used.","'newMarkers' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Legend' is defined but never used."]