[{"/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/index.tsx":"1","/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/reportWebVitals.ts":"2","/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/App.tsx":"3","/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/Map.tsx":"4","/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/footer.tsx":"5","/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/navbar.tsx":"6","/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/pieChart.tsx":"7","/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/setlistPie.tsx":"8"},{"size":464,"mtime":1686184823195,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1686053620863,"results":"11","hashOfConfig":"10"},{"size":7137,"mtime":1686272048117,"results":"12","hashOfConfig":"10"},{"size":4798,"mtime":1686195845196,"results":"13","hashOfConfig":"10"},{"size":484,"mtime":1686238935748,"results":"14","hashOfConfig":"10"},{"size":1075,"mtime":1686271954057,"results":"15","hashOfConfig":"10"},{"size":1191,"mtime":1686187543522,"results":"16","hashOfConfig":"10"},{"size":1182,"mtime":1686234062690,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1g8hrh",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},"/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/index.tsx",[],[],[],"/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/reportWebVitals.ts",[],[],"/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/App.tsx",["48","49","50","51","52","53","54","55","56","57","58","59","60","61","62"],[],"import React from 'react';\nimport Map from './Map';\nimport { Footer } from './footer';\nimport { Navbar } from './navbar';\nimport markerData from './data/usa.json';\nimport L, { Marker } from 'leaflet';\nimport { PieChart } from 'recharts';\nimport PieChartComponent from './pieChart';\nimport SetlistPie from './setlistPie';\n\ninterface MarkerData {\n  lat: number;\n  lon: number;\n  city: string;\n  date: string;\n  shows: number;\n  openers: [string];\n}\n\nconst App: React.FC = () => {\n  const GAYLE = \"./images/gayle.png\";\n  const PB = \"./images/PhoebeBridgers.png\";\n  const paramore = \"./images/paramore.png\";\n  const red = \"./images/girl_in_red.png\";\n  const muna = \"./images/muna.png\";\n  const ga = \"./images/gracieAbrams.png\";\n  const haim = \"./images/haim.png\";\n  const bbdb = \"./images/bbdb.png\";\n  const owenn = \"./images/owenn.png\";\n  const sc = \"./images/sc.png\";\n\n  const sortedMarkerData = [...markerData].sort(\n    (a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()\n  );\n\n  let city_title = \"\";\n  let city_opener: string[] = [];\n  let city_date = \"\";\n\n  const newMarkers: Marker[] = [];\n  sortedMarkerData.forEach((marker, index) => {\n    const { city, date, openers } = marker;\n    const currentDate = new Date();\n    const markerDate = new Date(date);\n\n    if (markerDate >= currentDate) {\n      city_title = city;\n      city_opener = openers;\n      city_date = date;\n    }\n  });\n\n  return (\n    <div style={{ backgroundColor: \"#2B324C\" }}>\n      {/* Header */}\n      <Navbar />\n      <div className=\"flex flex-col justify-center md:flex-row\" style={{width:\"100%\"}}>\n        <div\n          className=\"bg-gray-800 shadow-lg rounded-lg items-center p-10 m-7\"\n          style={{ width: \"75%\"}}\n        >\n          <div className=\"flex items-center justify-between\">\n            <h2\n              className=\"m-5 text-2xl text-white font-semibold flex items-center animate-slide-in\"\n              style={{ fontFamily: \"era\" }}\n            >\n              <img src=\"./images/marker-icon.png\" width={40} style={{ marginRight: \"10px\" }} />\n              <span>{`Next Tour Location: ${city_title}`}</span>\n              <span >{`Next Tour Date: ${city_date}`}</span>\n            </h2>\n            {/* Buttons */}\n            <div className=\"flex space-x-2\">\n              <button\n                className=\"py-0.5 px-1 text-white text-sm m-5 rounded-md hover:bg-pink-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 animate-fade-in\"\n                style={{ fontFamily: \"nine\", backgroundColor: \"#b8acd1\" }}\n              >\n                North American Leg\n              </button>\n              <button\n                className=\"py-0.5 px-1 text-white text-sm m-5 rounded-md hover:bg-purple-600 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 animate-fade-in\"\n                style={{ fontFamily: \"nine\", backgroundColor: \"#526d85\" }}\n              >\n                International Dates\n              </button>\n            </div>\n          </div>\n          <Map />\n          <div style={{ whiteSpace: 'nowrap' }} className=\"animate-slide-up\">\n            <img src={GAYLE} style={{ display: 'inline-block', verticalAlign: 'middle', width: 75, margin: 10 }} />\n            <img src={red} style={{ display: 'inline-block', verticalAlign: 'middle', width: 45, margin: 10 }} />\n            <img src={muna} style={{ display: 'inline-block', verticalAlign: 'middle', width: 75, margin: 10 }} />\n            <img src={haim} style={{ display: 'inline-block', verticalAlign: 'middle', width: 75, margin: 10 }} />\n            <img src={paramore} style={{ display: 'inline-block', verticalAlign: 'middle', width: 75, margin: 10 }} />\n            <img src={PB} style={{ padding: 10, display: 'inline-block', verticalAlign: 'middle', width: 100, margin: 10 }} />\n            <img src={ga} style={{ display: 'inline-block', verticalAlign: 'middle', width: 100, margin: 10 }} />\n            <img src={bbdb} style={{ display: 'inline-block', verticalAlign: 'middle', width: 75, margin: 10 }} />\n            <img src={owenn} style={{ display: 'inline-block', verticalAlign: 'middle', width: 75, margin: 10 }} />\n            {/* <img src={sc} style={{ display: 'inline-block', verticalAlign: 'middle', width: 75, margin: 10 }} /> */}\n          </div>\n\n          <h2\n            className=\"m-4 text-xl text-white font-semibold flex items-center animate-slide-in\"\n            style={{ fontFamily: \"nine\" }}\n          >\n            <span>{`Next Openers: ${city_opener}`}</span>\n          </h2>\n\n        </div>\n\n        {/* Start of Legend */}\n        <div className=\"bg-gray-800 shadow-lg rounded-lg p-6 m-7 animate-fade-in\" style={{ width: \"25%\" }}>\n          <h2 className=\"m-4 text-lg text-white\" style={{ fontFamily: \"nine\" }}>\n            Welcome to the Era's Tour Tracker! International dates and locations will be updated soon â˜º\n          </h2>\n          <img src=\"./images/eras-tour-poster.png\" style={{ width: 1000, boxShadow: \"90\" }} className='rounded-lg' alt=\"tour poster\" />\n\n          <h2 className=\"m-3 text-3xl text-white font-semibold\" style={{ fontFamily: \"era\" }}>\n            Legend\n          </h2>\n          <div className=\"flex items-center space-x-2 mb-2\">\n            <div className=\"w-4 h-4 bg-blue-500 rounded-full\"></div>\n            <span className=\"text-white text-3xl\" style={{ fontFamily: \"folklore\" }}>\n              Future Locations\n            </span>\n          </div>\n          <div className=\"flex items-center space-x-2 mb-2\">\n            <div className=\"w-4 h-4 bg-green-500 rounded-full\"></div>\n            <span className=\"text-white text-3xl\" style={{ fontFamily: \"folklore\" }}>\n              Completed Locations\n            </span>\n          </div>\n        </div>\n\n        {/* End of Legend */}\n      </div>\n\n      <div className=\"flex flex-col md:flex-row\" style={{}}>\n\n        {/* Surprise Song Analytics */}\n        <div className=\"bg-gray-800 shadow-lg rounded-lg p-6 m-7 animate-fade-in\" style={{ width: \"50%\" }}>\n          <h2 className=\"m-3 text-3xl text-white font-semibold\" style={{ fontFamily: \"era\" }}>\n            Surprise Song Analytics\n          </h2>\n          <p className=\"text-white text-2xl ml-2\" style={{ fontFamily: \"folklore\" }}>click on the components to see how many songs were played for each album :)</p>\n          <PieChartComponent />\n\n          <a href=\"https://www.benlilley.dev/eras-tour-surprise-songs/\" className=\"m-4 text-xl text-white underline hover:text-blue\" style={{ fontFamily: \"era\" }}>Surprise Song Tracker Website</a>\n        </div>\n\n        {/* Setlist Analytics */}\n        <div className=\"bg-gray-800 shadow-lg rounded-lg p-6 m-7 animate-fade-in\" style={{ width: \"50%\" }}>\n\n          <h2 className=\"m-3 text-3xl text-white font-semibold\" style={{ fontFamily: \"era\" }}>\n            Setlist Songs\n          </h2>\n          <p className=\"text-white text-2xl ml-2\" style={{ fontFamily: \"folklore\" }}>1 song on Speak Now is a crime i'm sorry but a 45 song set is a blessing, she's GIVING</p>\n          <SetlistPie/>\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/Map.tsx",["63"],[],"import React, { useEffect, useState } from 'react';\nimport L, { Marker } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nimport markerIcon from './marker-icon.png';\nimport futureIcon from './future-marker-icon.png';\nimport completedIcon from './completed-marker-icon.png';\n\nimport markerData from './data/usa.json';\n\ninterface MarkerData {\n  lat: number;\n  lon: number;\n  city: string;\n  date: string;\n  shows: number;\n  openers: [string];\n}\n\nconst MapComponent: React.FC = () => {\n  const [map, setMap] = useState<L.Map | null>(null);\n  const [markers, setMarkers] = useState<Marker[]>([]);\n\n  useEffect(() => {\n    const newMap = L.map('map').setView([37.0902, -95.7129], 4);\n    \n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Map data &copy; OpenStreetMap contributors',\n      minZoom: 0,\n      maxZoom: 15,\n    }).addTo(newMap);\n\n    const customIcon = L.icon({\n      iconUrl: markerIcon,\n      iconSize: [60, 60],\n      iconAnchor: [30, 50],\n      popupAnchor: [-3, -76],\n    });\n\n    const sortedMarkerData = [...markerData].sort(\n      (a, b) => new Date(a.date).getTime() - new Date(b.date).getTime()\n    );\n\n    const newMarkers: Marker[] = [];\n    sortedMarkerData.forEach((marker, index) => {\n      const { lat, lon, city, date, shows, openers } = marker;\n      const markerOptions: L.MarkerOptions = {\n        icon: customIcon,\n      };\n\n      const currentDate = new Date();\n      const markerDate = new Date(date);\n\n      if (markerDate <= currentDate) {\n        markerOptions.icon = L.icon({\n          ...customIcon.options,\n          iconUrl: completedIcon,\n        });\n      } else {\n        markerOptions.icon = L.icon({\n          ...customIcon.options,\n          iconUrl: futureIcon,\n        });\n      }\n\n      const GAYLE = \"./images/gayle.png\";\n      const PB = \"./images/PhoebeBridgers.png\";\n      const paramore = \"./images/paramore.png\";\n      const red =\"./images/girl_in_red.png\";\n      const muna =\"./images/muna.png\";\n      const ga = \"./images/gracieAbrams.png\";\n      const haim =\"./images/haim.png\";\n      const bbdb = \"./images/bbdb.png\";\n      const owenn =\"./images/owenn.png\";\n\n      const getOpenerIcons = (openers: string[]) => {\n        const openerIcons = openers.map((opener, index) => {\n          let icon = null;\n\n          switch (opener) {\n            case 'GAYLE':\n              icon = `<img src=${GAYLE} alt=\"Gayle\" width=\"90px\" style=\"padding:3px\"/>`;\n              break;\n            case 'girl in red':\n              icon = `<img src=${red} alt=\"girl in red\" width=\"60px\" style=\"padding:3px\"/>`;\n              break;\n            case 'Phoebe Bridgers':\n              icon = `<img src=${PB} alt=\"Phoebe Bridgers\" width=\"190px\" style=\"padding:3px\" />`;\n              break;\n            case 'Paramore':\n              icon = `<img src=${paramore} alt=\"paramore\" width=\"80px\" style=\"padding:3px\" />`;\n              break;\n            case 'MUNA':\n              icon = `<img src=${muna} alt=\"muna\" width=\"80px\" style=\"padding:3px\"/>`;\n              break;\n            case 'Gracie Abrams':\n              icon = `<img src=${ga} alt=\"gracie abrams\" width=\"2000px\" style=\"padding:3px\" />`;\n              break;\n            case 'HAIM':\n                icon = `<img src=${haim} alt=\"haim\" width=\"80px\" style=\"padding:3px\"/>`;\n                break;\n            case 'beabadobee':\n                icon = `<img src=${bbdb} alt=\"bbdb\" width=\"80px\"style=\"padding:3px\" />`;\n                break;\n            case 'OWENN':\n                icon = `<img src=${owenn} alt=\"owenn\" width=\"80px\" style=\"padding:3px\"/>`;\n                break;\n          }\n\n          return icon;\n        });\n\n        return openerIcons.join('');\n      };\n\n      const openerIcons = getOpenerIcons(openers);\n      const mapMarker = new Marker([lat, lon], markerOptions).bindPopup(`\n          <div style=\"background-color: silver; font-family: nine; color: white; padding: 10px; margin-bottom: 10px;\">\n        \n          <b>${city}</b><br />\n          Date: ${date}<br />\n          Shows: ${shows}<br />\n          ${openerIcons}\n        </div>\n      `);\n\n      newMarkers.push(mapMarker);\n    });\n\n    setMarkers(newMarkers);\n    setMap(newMap);\n\n    return () => {\n      newMap.remove();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (map) {\n      let currentIndex = 0;\n      const interval = setInterval(() => {\n        if (currentIndex >= markers.length) {\n          clearInterval(interval);\n          return;\n        }\n\n        markers[currentIndex].addTo(map);\n        currentIndex++;\n      }, 350);\n\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [map, markers]);\n\n  return (\n    <div>\n      <div id=\"map\" style={{ height: '500px', width: '100%' }}></div>\n    </div>\n  );\n};\n\nexport default MapComponent;\n","/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/footer.tsx",[],[],"/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/navbar.tsx",["64"],[],"import React from 'react';\n\nexport const Navbar: React.FC = () => {\n  return (\n    <div className='items-center'>\n      <div className=\"\">\n        <div className='bg-gray-800 shadow-lg p-5'>\n          <a href=\"/\">\n            <h1 className=\"font-semibold text-white text-5xl hover:opacity-75 transition hover:scale-105\" style={{ fontFamily: 'era', textAlign: 'center' }}>THE ERAS TOUR TRACKER</h1>\n          </a>\n          <h1 className=\"text-white text-2xl\" style={{ fontFamily: 'folklore', textAlign: 'center' }}>Click on the map markers to see the dates and openers for each show!</h1>\n        </div>\n        <div className=\"absolute top-0 right-0 mt-3 mr-3 hover:opacity-75 transition hover:scale-110\">\n          <a href=\"https://github.com/vvegesna01\">\n          <button\n            className=\"rounded-full p-2\"\n            style={{ width: '90px', height: '40px', border: 'none', outline: 'none' }}\n          >\n            {\n              <img src=\"./images/github-icon-t.png\"></img>\n            }\n          </button> </a>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n","/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/pieChart.tsx",["65"],[],"\"use client\";\nimport React, { useState } from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Legend } from 'recharts';\nimport data from \"./data/surprise_songs.json\";\n\nconst PieChartComponent = () => {\n  const [activeSlice, setActiveSlice] = useState<number | null>(null);\n\n  const handlePieClick = (data: any, index: number) => {\n    setActiveSlice(index);\n  };\n\n  const renderLabel = (entry: any) => {\n    const { album, songs } = entry;\n\n    if (entry.index === activeSlice) {\n      return `${album}: ${songs} Songs`;\n    }\n\n\n    return album;\n  };\n  \n\n  return (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <PieChart>\n        <Pie\n          dataKey=\"songs\"\n          data={data}\n          cx=\"50%\"\n          cy=\"50%\"\n          outerRadius={130}\n          fill=\"black\"\n          label={renderLabel}\n          onClick={handlePieClick}\n\t\t  fontFamily={\"nine\"}\n\t\t  \n        >\n          {\n            data.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.color} />\n            ))\n          }\n        </Pie>\n        {/* <Legend align=\"center\" /> */}\n      </PieChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default PieChartComponent;\n","/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/setlistPie.tsx",["66"],[],"\"use client\";\nimport React, { useState } from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Legend } from 'recharts';\nimport data from \"./data/setlist_song.json\";\n\nexport const SetlistPie = () => {\n  const [activeSlice, setActiveSlice] = useState<number | null>(null);\n\n  const handlePieClick = (data: any, index: number) => {\n    setActiveSlice(index);\n  };\n\n  const renderLabel = (entry: any) => {\n    const { album, songs } = entry;\n\n    if (entry.index === activeSlice) {\n      return `${album}: ${songs} Songs`;\n    }\n\n\n    return album;\n  };\n  \n\n  return (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <PieChart>\n        <Pie\n          dataKey=\"songs\"\n          data={data}\n          cx=\"50%\"\n          cy=\"50%\"\n          outerRadius={130}\n          fill=\"black\"\n          label={renderLabel}\n          onClick={handlePieClick}\n\t\t  fontFamily={\"nine\"}\n\t\t  \n        >\n          {\n            data.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.color} />\n            ))\n          }\n        </Pie>\n        {/* <Legend align=\"center\" /> */}\n      </PieChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default SetlistPie;\n",{"ruleId":"67","severity":1,"message":"68","line":6,"column":8,"nodeType":"69","messageId":"70","endLine":6,"endColumn":9},{"ruleId":"67","severity":1,"message":"71","line":7,"column":10,"nodeType":"69","messageId":"70","endLine":7,"endColumn":18},{"ruleId":"67","severity":1,"message":"72","line":11,"column":11,"nodeType":"69","messageId":"70","endLine":11,"endColumn":21},{"ruleId":"67","severity":1,"message":"73","line":30,"column":9,"nodeType":"69","messageId":"70","endLine":30,"endColumn":11},{"ruleId":"67","severity":1,"message":"74","line":40,"column":9,"nodeType":"69","messageId":"70","endLine":40,"endColumn":29},{"ruleId":"75","severity":1,"message":"76","line":67,"column":15,"nodeType":"77","endLine":67,"endColumn":96},{"ruleId":"75","severity":1,"message":"76","line":89,"column":13,"nodeType":"77","endLine":89,"endColumn":116},{"ruleId":"75","severity":1,"message":"76","line":90,"column":13,"nodeType":"77","endLine":90,"endColumn":114},{"ruleId":"75","severity":1,"message":"76","line":91,"column":13,"nodeType":"77","endLine":91,"endColumn":115},{"ruleId":"75","severity":1,"message":"76","line":92,"column":13,"nodeType":"77","endLine":92,"endColumn":115},{"ruleId":"75","severity":1,"message":"76","line":93,"column":13,"nodeType":"77","endLine":93,"endColumn":119},{"ruleId":"75","severity":1,"message":"76","line":94,"column":13,"nodeType":"77","endLine":94,"endColumn":127},{"ruleId":"75","severity":1,"message":"76","line":95,"column":13,"nodeType":"77","endLine":95,"endColumn":114},{"ruleId":"75","severity":1,"message":"76","line":96,"column":13,"nodeType":"77","endLine":96,"endColumn":115},{"ruleId":"75","severity":1,"message":"76","line":97,"column":13,"nodeType":"77","endLine":97,"endColumn":116},{"ruleId":"67","severity":1,"message":"72","line":11,"column":11,"nodeType":"69","messageId":"70","endLine":11,"endColumn":21},{"ruleId":"75","severity":1,"message":"76","line":20,"column":15,"nodeType":"77","endLine":20,"endColumn":53},{"ruleId":"67","severity":1,"message":"78","line":3,"column":52,"nodeType":"69","messageId":"70","endLine":3,"endColumn":58},{"ruleId":"67","severity":1,"message":"78","line":3,"column":52,"nodeType":"69","messageId":"70","endLine":3,"endColumn":58},"@typescript-eslint/no-unused-vars","'L' is defined but never used.","Identifier","unusedVar","'PieChart' is defined but never used.","'MarkerData' is defined but never used.","'sc' is assigned a value but never used.","'newMarkers' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Legend' is defined but never used."]