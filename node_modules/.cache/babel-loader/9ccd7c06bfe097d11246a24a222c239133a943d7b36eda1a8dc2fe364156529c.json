{"ast":null,"code":"var _jsxFileName = \"/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/Map.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport L, { Marker } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport markerIcon from './marker-icon.png'; // Import a custom marker icon if desired\n\nimport markerData from './data/date_testing.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const [sliderValue, setSliderValue] = useState(0);\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [markerVisibility, setMarkerVisibility] = useState([]);\n  useEffect(() => {\n    const newMap = L.map('map').setView([33.529115, -112.264551], 13);\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Map data &copy; OpenStreetMap contributors',\n      minZoom: 0,\n      maxZoom: 30\n    }).addTo(newMap);\n    const customIcon = L.icon({\n      iconUrl: markerIcon,\n      // Custom marker icon URL\n      iconSize: [80, 112],\n      // size of the icon\n      iconAnchor: [40, 90],\n      // point of the icon which will correspond to marker's location\n      popupAnchor: [-3, -76]\n    });\n    const sortedMarkerData = [...markerData].sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime()); // Sort markers by date\n\n    const newMarkers = [];\n    sortedMarkerData.forEach((marker, index) => {\n      const {\n        lat,\n        lon,\n        city,\n        date\n      } = marker;\n      const markerOptions = {\n        icon: customIcon\n      };\n      const currentDate = new Date();\n      const markerDate = new Date(date);\n      if (markerDate <= currentDate) {\n        // Completed date\n        markerOptions.icon = L.icon({\n          ...customIcon.options,\n          iconUrl: markerIcon // Set completed marker icon URL\n        });\n      } else {\n        // Future date\n        markerOptions.icon = L.icon({\n          ...customIcon.options,\n          iconUrl: markerIcon // Set future marker icon URL\n        });\n      }\n\n      const mapMarker = new Marker([lat, lon], markerOptions).bindPopup(`<b>${city}</b><br>Date: ${date}`);\n      newMarkers.push(mapMarker);\n      setMarkerVisibility(prevVisibility => [...prevVisibility, true]);\n    });\n    setMarkers(newMarkers);\n    setSliderValue(sortedMarkerData.length - 1); // Set slider value to the maximum\n    setMap(newMap);\n    return () => {\n      newMap.remove();\n    };\n  }, []);\n  const handleSliderChange = value => {\n    if (typeof value === 'number' && map) {\n      setSliderValue(value);\n\n      // Update the visibility state of each marker\n      setMarkerVisibility(prevVisibility => prevVisibility.map((_, index) => index <= value));\n    }\n  };\n  useEffect(() => {\n    if (map) {\n      markers.forEach((marker, index) => {\n        if (markerVisibility[index]) {\n          marker.addTo(map);\n        } else {\n          marker.removeFrom(map);\n        }\n      });\n    }\n  }, [map, markers, markerVisibility]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Slider, {\n      min: 0,\n      max: markerData.length - 1,\n      value: sliderValue,\n      onChange: handleSliderChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: '500px',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"l9u1ACqUNdrxs2zDIrlvLUCsG0w=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","L","Marker","Slider","markerIcon","markerData","jsxDEV","_jsxDEV","MapComponent","_s","sliderValue","setSliderValue","map","setMap","markers","setMarkers","markerVisibility","setMarkerVisibility","newMap","setView","tileLayer","attribution","minZoom","maxZoom","addTo","customIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","sortedMarkerData","sort","a","b","Date","date","getTime","newMarkers","forEach","marker","index","lat","lon","city","markerOptions","currentDate","markerDate","options","mapMarker","bindPopup","push","prevVisibility","length","remove","handleSliderChange","value","_","removeFrom","children","min","max","onChange","fileName","_jsxFileName","lineNumber","columnNumber","id","style","height","width","_c","$RefreshReg$"],"sources":["/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/Map.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport L, { Marker } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nimport markerIcon from './marker-icon.png'; // Import a custom marker icon if desired\nimport futureIcon from './future-marker-icons.png';\nimport completedIcon from './completed-marker-icon.png';\n\nimport markerData from './data/date_testing.json';\n\ninterface MarkerData {\n  lat: number;\n  lon: number;\n  city: string;\n  date: string;\n}\n\nconst MapComponent: React.FC = () => {\n  const [sliderValue, setSliderValue] = useState(0);\n  const [map, setMap] = useState<L.Map | null>(null);\n  const [markers, setMarkers] = useState<Marker[]>([]);\n  const [markerVisibility, setMarkerVisibility] = useState<boolean[]>([]);\n\n  useEffect(() => {\n    const newMap = L.map('map').setView([33.529115, -112.264551], 13);\n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Map data &copy; OpenStreetMap contributors',\n      minZoom: 0,\n      maxZoom: 30,\n    }).addTo(newMap);\n\n    const customIcon = L.icon({\n      iconUrl: markerIcon, // Custom marker icon URL\n      iconSize: [80, 112], // size of the icon\n      iconAnchor: [40, 90], // point of the icon which will correspond to marker's location\n      popupAnchor: [-3, -76],\n    });\n\n    const sortedMarkerData = [...markerData].sort(\n      (a: MarkerData, b: MarkerData) =>\n        new Date(a.date).getTime() - new Date(b.date).getTime()\n    ); // Sort markers by date\n\n    const newMarkers: Marker[] = [];\n    sortedMarkerData.forEach((marker, index) => {\n      const { lat, lon, city, date } = marker;\n      const markerOptions: L.MarkerOptions = {\n        icon: customIcon,\n      };\n\n      const currentDate = new Date();\n      const markerDate = new Date(date);\n\n      if (markerDate <= currentDate) {\n        // Completed date\n        markerOptions.icon = L.icon({\n          ...customIcon.options,\n          iconUrl: markerIcon, // Set completed marker icon URL\n        });\n      } else {\n        // Future date\n        markerOptions.icon = L.icon({\n          ...customIcon.options,\n          iconUrl: markerIcon, // Set future marker icon URL\n        });\n      }\n\n      const mapMarker = new Marker([lat, lon], markerOptions)\n        .bindPopup(`<b>${city}</b><br>Date: ${date}`);\n\n      newMarkers.push(mapMarker);\n      setMarkerVisibility((prevVisibility) => [...prevVisibility, true]);\n    });\n\n    setMarkers(newMarkers);\n    setSliderValue(sortedMarkerData.length - 1); // Set slider value to the maximum\n    setMap(newMap);\n\n    return () => {\n      newMap.remove();\n    };\n  }, []);\n\n  const handleSliderChange = (value: number | number[]) => {\n    if (typeof value === 'number' && map) {\n      setSliderValue(value);\n\n      // Update the visibility state of each marker\n      setMarkerVisibility((prevVisibility) =>\n        prevVisibility.map((_, index) => index <= value)\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (map) {\n      markers.forEach((marker, index) => {\n        if (markerVisibility[index]) {\n          marker.addTo(map);\n        } else {\n          marker.removeFrom(map);\n        }\n      });\n    }\n  }, [map, markers, markerVisibility]);\n\n  return (\n    <div>\n      <Slider\n        min={0}\n        max={markerData.length - 1}\n        value={sliderValue}\n        onChange={handleSliderChange}\n      />\n      <div id=\"map\" style={{ height: '500px', width: '100%' }}></div>\n    </div>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}