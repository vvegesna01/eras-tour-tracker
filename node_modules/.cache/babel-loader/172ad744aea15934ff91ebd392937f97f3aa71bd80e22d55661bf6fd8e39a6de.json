{"ast":null,"code":"var _jsxFileName = \"/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/Map.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport L, { Marker } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport markerIcon from './marker-icon.png'; // Import a custom marker icon if desired\n\nimport markerData from './data/date_testing.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const [sliderValue, setSliderValue] = useState(0);\n  const [markers, setMarkers] = useState([]);\n  const [markerVisibility, setMarkerVisibility] = useState([]);\n  useEffect(() => {\n    const map = L.map('map').setView([33.529115, -112.264551], 13);\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Map data &copy; OpenStreetMap contributors',\n      minZoom: 0,\n      maxZoom: 30\n    }).addTo(map);\n    const customIcon = L.icon({\n      iconUrl: markerIcon,\n      // Custom marker icon URL\n      iconSize: [80, 112],\n      // size of the icon\n      iconAnchor: [40, 90],\n      // point of the icon which will correspond to marker's location\n      popupAnchor: [-3, -76]\n    });\n    const sortedMarkerData = [...markerData].sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime()); // Sort markers by date\n\n    const newMarkers = [];\n    sortedMarkerData.forEach((marker, index) => {\n      const {\n        lat,\n        lon,\n        city,\n        date\n      } = marker;\n      const markerOptions = {\n        icon: customIcon\n      };\n      const mapMarker = new Marker([lat, lon], markerOptions).bindPopup(`<b>${city}</b><br>Date: ${date}`);\n      newMarkers.push(mapMarker);\n      setMarkerVisibility(prevVisibility => [...prevVisibility, true]);\n    });\n    setMarkers(newMarkers);\n    setSliderValue(sortedMarkerData.length - 1); // Set slider value to the maximum\n\n    return () => {\n      map.remove();\n    };\n  }, []);\n  const handleSliderChange = value => {\n    if (typeof value === 'number') {\n      setSliderValue(value);\n\n      // Update the visibility state of each marker\n      setMarkerVisibility(prevVisibility => prevVisibility.map((_, index) => index <= value));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Slider, {\n      min: 0,\n      max: markerData.length - 1,\n      value: sliderValue,\n      onChange: handleSliderChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: '500px',\n        width: '100%'\n      },\n      children: markers.map((marker, index) => {\n        if (markerVisibility[index]) {\n          marker.addTo(map);\n        } else {\n          marker.removeFrom(map);\n        }\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"pTaXiwdONEm7ebdFTj4qLpisSLA=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","L","Marker","Slider","markerIcon","markerData","jsxDEV","_jsxDEV","MapComponent","_s","sliderValue","setSliderValue","markers","setMarkers","markerVisibility","setMarkerVisibility","map","setView","tileLayer","attribution","minZoom","maxZoom","addTo","customIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","sortedMarkerData","sort","a","b","Date","date","getTime","newMarkers","forEach","marker","index","lat","lon","city","markerOptions","mapMarker","bindPopup","push","prevVisibility","length","remove","handleSliderChange","value","_","children","min","max","onChange","fileName","_jsxFileName","lineNumber","columnNumber","id","style","height","width","removeFrom","_c","$RefreshReg$"],"sources":["/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/Map.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport L, { Marker } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nimport markerIcon from './marker-icon.png'; // Import a custom marker icon if desired\n\nimport markerData from './data/date_testing.json';\n\ninterface MarkerData {\n  lat: number;\n  lon: number;\n  city: string;\n  date: string;\n}\n\nconst MapComponent: React.FC = () => {\n  const [sliderValue, setSliderValue] = useState(0);\n  const [markers, setMarkers] = useState<Marker[]>([]);\n  const [markerVisibility, setMarkerVisibility] = useState<boolean[]>([]);\n\n  useEffect(() => {\n    const map = L.map('map').setView([33.529115, -112.264551], 13);\n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Map data &copy; OpenStreetMap contributors',\n      minZoom: 0,\n      maxZoom: 30,\n    }).addTo(map);\n\n    const customIcon = L.icon({\n      iconUrl: markerIcon, // Custom marker icon URL\n      iconSize: [80, 112], // size of the icon\n      iconAnchor: [40, 90], // point of the icon which will correspond to marker's location\n      popupAnchor: [-3, -76],\n    });\n\n    const sortedMarkerData = [...markerData].sort(\n      (a: MarkerData, b: MarkerData) => new Date(a.date).getTime() - new Date(b.date).getTime()\n    ); // Sort markers by date\n\n    const newMarkers: Marker[] = [];\n    sortedMarkerData.forEach((marker, index) => {\n      const { lat, lon, city, date } = marker;\n      const markerOptions = { icon: customIcon };\n\n      const mapMarker = new Marker([lat, lon], markerOptions)\n        .bindPopup(`<b>${city}</b><br>Date: ${date}`);\n\n      newMarkers.push(mapMarker);\n      setMarkerVisibility((prevVisibility) => [...prevVisibility, true]);\n    });\n\n    setMarkers(newMarkers);\n    setSliderValue(sortedMarkerData.length - 1); // Set slider value to the maximum\n\n    return () => {\n      map.remove();\n    };\n  }, []);\n\n  const handleSliderChange = (value: number | number[]) => {\n    if (typeof value === 'number') {\n      setSliderValue(value);\n\n      // Update the visibility state of each marker\n      setMarkerVisibility((prevVisibility) =>\n        prevVisibility.map((_, index) => index <= value)\n      );\n    }\n  };\n\n  return (\n    <div>\n      <Slider\n        min={0}\n        max={markerData.length - 1}\n        value={sliderValue}\n        onChange={handleSliderChange}\n      />\n      <div id=\"map\" style={{ height: '500px', width: '100%' }}>\n        {markers.map((marker, index) => {\n          if (markerVisibility[index]) {\n            marker.addTo(map);\n          } else {\n            marker.removeFrom(map);\n          }\n          return null;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}