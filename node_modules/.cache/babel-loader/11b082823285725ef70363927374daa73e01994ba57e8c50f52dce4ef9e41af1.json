{"ast":null,"code":"var _jsxFileName = \"/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/Map.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport L, { Marker } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport markerIcon from './marker-icon.png'; // Import a custom marker icon if desired\n\nimport markerData from './data/date_testing.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  useEffect(() => {\n    const map = L.map('map').setView([33.529115, -112.264551], 13);\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Map data &copy; OpenStreetMap contributors',\n      minZoom: 0,\n      maxZoom: 30\n    }).addTo(map);\n    const customIcon = L.icon({\n      iconUrl: markerIcon,\n      // Custom marker icon URL\n      iconSize: [80, 112],\n      // size of the icon\n      iconAnchor: [40, 90],\n      // point of the icon which will correspond to marker's location\n      popupAnchor: [-3, -76]\n    });\n    let delay = 0; // Delay for animating markers\n\n    markerData.forEach((marker, index) => {\n      const {\n        lat,\n        lon,\n        city,\n        date\n      } = marker;\n      const markerOptions = {\n        icon: customIcon\n      };\n      setTimeout(() => {\n        const mapMarker = new Marker([lat, lon], markerOptions).bindPopup(`<b>${city}</b><br>Date: ${date}`).addTo(map);\n      }, delay);\n      delay += 1000; // Increase the delay for each marker by 1 second\n    });\n\n    return () => {\n      map.remove();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: '500px',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n};\n_s(Map, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","L","Marker","markerIcon","markerData","jsxDEV","_jsxDEV","Map","_s","map","setView","tileLayer","attribution","minZoom","maxZoom","addTo","customIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","delay","forEach","marker","index","lat","lon","city","date","markerOptions","setTimeout","mapMarker","bindPopup","remove","id","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/Map.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport L, { Marker } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nimport markerIcon from './marker-icon.png'; // Import a custom marker icon if desired\n\nimport markerData from './data/date_testing.json';\n\nconst Map: React.FC = () => {\n  useEffect(() => {\n    const map = L.map('map').setView([33.529115, -112.264551], 13);\n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Map data &copy; OpenStreetMap contributors',\n      minZoom: 0,\n      maxZoom: 30,\n    }).addTo(map);\n\n    const customIcon = L.icon({\n      iconUrl: markerIcon, // Custom marker icon URL\n      iconSize: [80, 112], // size of the icon\n      iconAnchor: [40, 90], // point of the icon which will correspond to marker's location\n      popupAnchor: [-3, -76],\n    });\n\n    let delay = 0; // Delay for animating markers\n\n    markerData.forEach((marker, index) => {\n      const { lat, lon, city, date } = marker;\n      const markerOptions = { icon: customIcon };\n\n      setTimeout(() => {\n        const mapMarker = new Marker([lat, lon], markerOptions)\n          .bindPopup(`<b>${city}</b><br>Date: ${date}`)\n          .addTo(map);\n      }, delay);\n\n      delay += 1000; // Increase the delay for each marker by 1 second\n    });\n\n    return () => {\n      map.remove();\n    };\n  }, []);\n\n  return <div id=\"map\" style={{ height: '500px', width: '100%' }}></div>;\n};\n\nexport default Map;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,CAAC,IAAIC,MAAM,QAAQ,SAAS;AACnC,OAAO,0BAA0B;AAEjC,OAAOC,UAAU,MAAM,mBAAmB,CAAC,CAAC;;AAE5C,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1BR,SAAS,CAAC,MAAM;IACd,MAAMS,GAAG,GAAGR,CAAC,CAACQ,GAAG,CAAC,KAAK,CAAC,CAACC,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,CAAC;IAE9DT,CAAC,CAACU,SAAS,CAAC,oDAAoD,EAAE;MAChEC,WAAW,EAAE,4CAA4C;MACzDC,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE;IACX,CAAC,CAAC,CAACC,KAAK,CAACN,GAAG,CAAC;IAEb,MAAMO,UAAU,GAAGf,CAAC,CAACgB,IAAI,CAAC;MACxBC,OAAO,EAAEf,UAAU;MAAE;MACrBgB,QAAQ,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC;MAAE;MACrBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;MAAE;MACtBC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;IACvB,CAAC,CAAC;IAEF,IAAIC,KAAK,GAAG,CAAC,CAAC,CAAC;;IAEflB,UAAU,CAACmB,OAAO,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;MACpC,MAAM;QAAEC,GAAG;QAAEC,GAAG;QAAEC,IAAI;QAAEC;MAAK,CAAC,GAAGL,MAAM;MACvC,MAAMM,aAAa,GAAG;QAAEb,IAAI,EAAED;MAAW,CAAC;MAE1Ce,UAAU,CAAC,MAAM;QACf,MAAMC,SAAS,GAAG,IAAI9B,MAAM,CAAC,CAACwB,GAAG,EAAEC,GAAG,CAAC,EAAEG,aAAa,CAAC,CACpDG,SAAS,CAAE,MAAKL,IAAK,iBAAgBC,IAAK,EAAC,CAAC,CAC5Cd,KAAK,CAACN,GAAG,CAAC;MACf,CAAC,EAAEa,KAAK,CAAC;MAETA,KAAK,IAAI,IAAI,CAAC,CAAC;IACjB,CAAC,CAAC;;IAEF,OAAO,MAAM;MACXb,GAAG,CAACyB,MAAM,CAAC,CAAC;IACd,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO5B,OAAA;IAAK6B,EAAE,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACxE,CAAC;AAAClC,EAAA,CAtCID,GAAa;AAAAoC,EAAA,GAAbpC,GAAa;AAwCnB,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}