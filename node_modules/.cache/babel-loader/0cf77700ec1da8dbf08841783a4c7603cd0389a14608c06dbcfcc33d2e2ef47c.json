{"ast":null,"code":"var _jsxFileName = \"/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/Map.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport L, { Marker } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport markerIcon from './marker-icon.png';\nimport futureIcon from './future-marker-icon.png';\nimport completedIcon from './completed-marker-icon.png';\nimport markerData from './data/usa.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  useEffect(() => {\n    const newMap = L.map('map').setView([37.0902, -95.7129], 4);\n    const GAYLE = '<img src=\"./images/gayle.png\" height=\"20px\" width=\"90px\"/>';\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Map data &copy; OpenStreetMap contributors',\n      minZoom: 0,\n      maxZoom: 15\n    }).addTo(newMap);\n    const customIcon = L.icon({\n      iconUrl: markerIcon,\n      iconSize: [80, 112],\n      iconAnchor: [40, 90],\n      popupAnchor: [-3, -76]\n    });\n    const sortedMarkerData = [...markerData].sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\n    const newMarkers = [];\n    sortedMarkerData.forEach((marker, index) => {\n      const {\n        lat,\n        lon,\n        city,\n        date,\n        shows,\n        openers\n      } = marker;\n      const markerOptions = {\n        icon: customIcon\n      };\n      const currentDate = new Date();\n      const markerDate = new Date(date);\n      if (markerDate <= currentDate) {\n        markerOptions.icon = L.icon({\n          ...customIcon.options,\n          iconUrl: completedIcon\n        });\n      } else {\n        markerOptions.icon = L.icon({\n          ...customIcon.options,\n          iconUrl: futureIcon\n        });\n      }\n      const getOpenerIcons = openers => {\n        const openerIcons = openers.map((opener, index) => {\n          let icon = null;\n          switch (opener) {\n            case 'GAYLE':\n              icon = `<img src=\"${GAYLE}\" alt=\"Gayle\" />`;\n              break;\n            case 'girl in red':\n              icon = `<img src=\"${GAYLE}\" alt=\"Gayle\" />`;\n              break;\n          }\n          return icon;\n        });\n        return openerIcons.join('');\n      };\n      const openerIcons = getOpenerIcons(openers);\n      const mapMarker = new Marker([lat, lon], markerOptions).bindPopup(`\n        <div>\n          ${GAYLE}\n          ${openerIcons}\n          <b>${city}</b><br />\n          Date: ${date}<br />\n          Shows: ${shows}<br />\n          Openers: ${openers.join(', ')}\n        </div>\n      `);\n      newMarkers.push(mapMarker);\n    });\n    setMarkers(newMarkers);\n    setMap(newMap);\n    return () => {\n      newMap.remove();\n    };\n  }, []);\n  useEffect(() => {\n    if (map) {\n      let currentIndex = 0;\n      const interval = setInterval(() => {\n        if (currentIndex >= markers.length) {\n          clearInterval(interval);\n          return;\n        }\n        markers[currentIndex].addTo(map);\n        currentIndex++;\n      }, 350);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [map, markers]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: '500px',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"I7TuLFBeEUIxtq4DX3dUpnEKnwg=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","L","Marker","markerIcon","futureIcon","completedIcon","markerData","jsxDEV","_jsxDEV","MapComponent","_s","map","setMap","markers","setMarkers","newMap","setView","GAYLE","tileLayer","attribution","minZoom","maxZoom","addTo","customIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","sortedMarkerData","sort","a","b","Date","date","getTime","newMarkers","forEach","marker","index","lat","lon","city","shows","openers","markerOptions","currentDate","markerDate","options","getOpenerIcons","openerIcons","opener","join","mapMarker","bindPopup","push","remove","currentIndex","interval","setInterval","length","clearInterval","children","id","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/Map.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport L, { Marker } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nimport markerIcon from './marker-icon.png';\nimport futureIcon from './future-marker-icon.png';\nimport completedIcon from './completed-marker-icon.png';\n\nimport markerData from './data/usa.json';\n\ninterface MarkerData {\n  lat: number;\n  lon: number;\n  city: string;\n  date: string;\n  shows: number;\n  openers: [string];\n}\n\nconst MapComponent: React.FC = () => {\n  const [map, setMap] = useState<L.Map | null>(null);\n  const [markers, setMarkers] = useState<Marker[]>([]);\n\n  useEffect(() => {\n    const newMap = L.map('map').setView([37.0902, -95.7129], 4);\n    const GAYLE = '<img src=\"./images/gayle.png\" height=\"20px\" width=\"90px\"/>';\n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Map data &copy; OpenStreetMap contributors',\n      minZoom: 0,\n      maxZoom: 15,\n    }).addTo(newMap);\n\n    const customIcon = L.icon({\n      iconUrl: markerIcon,\n      iconSize: [80, 112],\n      iconAnchor: [40, 90],\n      popupAnchor: [-3, -76],\n    });\n\n    const sortedMarkerData = [...markerData].sort(\n      (a, b) => new Date(a.date).getTime() - new Date(b.date).getTime()\n    );\n\n    const newMarkers: Marker[] = [];\n    sortedMarkerData.forEach((marker, index) => {\n      const { lat, lon, city, date, shows, openers } = marker;\n      const markerOptions: L.MarkerOptions = {\n        icon: customIcon,\n      };\n\n      const currentDate = new Date();\n      const markerDate = new Date(date);\n\n      if (markerDate <= currentDate) {\n        markerOptions.icon = L.icon({\n          ...customIcon.options,\n          iconUrl: completedIcon,\n        });\n      } else {\n        markerOptions.icon = L.icon({\n          ...customIcon.options,\n          iconUrl: futureIcon,\n        });\n      }\n\n      const getOpenerIcons = (openers: string[]) => {\n        const openerIcons = openers.map((opener, index) => {\n          let icon = null;\n\n          switch (opener) {\n            case 'GAYLE':\n              icon = `<img src=\"${GAYLE}\" alt=\"Gayle\" />`;\n              break;\n            case 'girl in red':\n              icon = `<img src=\"${GAYLE}\" alt=\"Gayle\" />`;\n              break;\n          }\n\n          return icon;\n        });\n\n        return openerIcons.join('');\n      };\n\n      const openerIcons = getOpenerIcons(openers);\n      const mapMarker = new Marker([lat, lon], markerOptions).bindPopup(`\n        <div>\n          ${GAYLE}\n          ${openerIcons}\n          <b>${city}</b><br />\n          Date: ${date}<br />\n          Shows: ${shows}<br />\n          Openers: ${openers.join(', ')}\n        </div>\n      `);\n\n      newMarkers.push(mapMarker);\n    });\n\n    setMarkers(newMarkers);\n    setMap(newMap);\n\n    return () => {\n      newMap.remove();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (map) {\n      let currentIndex = 0;\n      const interval = setInterval(() => {\n        if (currentIndex >= markers.length) {\n          clearInterval(interval);\n          return;\n        }\n\n        markers[currentIndex].addTo(map);\n        currentIndex++;\n      }, 350);\n\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [map, markers]);\n\n  return (\n    <div>\n      <div id=\"map\" style={{ height: '500px', width: '100%' }}></div>\n    </div>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}