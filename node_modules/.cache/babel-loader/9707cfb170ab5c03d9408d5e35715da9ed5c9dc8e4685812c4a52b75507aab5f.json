{"ast":null,"code":"var _jsxFileName = \"/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/Map.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport L, { Marker } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport markerIcon from './marker-icon.png'; // Import a custom marker icon if desired\n\nimport markerData from './data/date_testing.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  const [sliderValue, setSliderValue] = useState(0);\n  useEffect(() => {\n    const map = L.map('map').setView([33.529115, -112.264551], 13);\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Map data &copy; OpenStreetMap contributors',\n      minZoom: 0,\n      maxZoom: 30\n    }).addTo(map);\n    const customIcon = L.icon({\n      iconUrl: markerIcon,\n      // Custom marker icon URL\n      iconSize: [80, 112],\n      // size of the icon\n      iconAnchor: [40, 90],\n      // point of the icon which will correspond to marker's location\n      popupAnchor: [-3, -76]\n    });\n    let delay = 0; // Delay for animating markers\n\n    markerData.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime()); // Sort markers by date\n\n    markerData.forEach((marker, index) => {\n      const {\n        lat,\n        lon,\n        city,\n        date\n      } = marker;\n      const markerOptions = {\n        icon: customIcon\n      };\n      setTimeout(() => {\n        const mapMarker = new Marker([lat, lon], markerOptions).bindPopup(`<b>${city}</b><br>Date: ${date}`).addTo(map);\n      }, delay);\n      delay += 1000; // Increase the delay for each marker by 1 second\n    });\n\n    return () => {\n      map.remove();\n    };\n  }, []);\n  const handleSliderChange = value => {\n    setSliderValue(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Slider, {\n      min: 0,\n      max: markerData.length - 1,\n      value: sliderValue,\n      onChange: handleSliderChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: '500px',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"1F13hNU+Vt/AIFx32skJD7w1ZOs=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","L","Marker","Slider","markerIcon","markerData","jsxDEV","_jsxDEV","Map","_s","sliderValue","setSliderValue","map","setView","tileLayer","attribution","minZoom","maxZoom","addTo","customIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","delay","sort","a","b","Date","date","getTime","forEach","marker","index","lat","lon","city","markerOptions","setTimeout","mapMarker","bindPopup","remove","handleSliderChange","value","children","min","max","length","onChange","fileName","_jsxFileName","lineNumber","columnNumber","id","style","height","width","_c","$RefreshReg$"],"sources":["/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/Map.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport L, { Marker } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nimport markerIcon from './marker-icon.png'; // Import a custom marker icon if desired\n\nimport markerData from './data/date_testing.json';\n\ninterface MarkerData {\n  lat: number;\n  lon: number;\n  city: string;\n  date: string;\n}\n\nconst Map: React.FC = () => {\n  const [sliderValue, setSliderValue] = useState(0);\n\n  useEffect(() => {\n    const map = L.map('map').setView([33.529115, -112.264551], 13);\n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Map data &copy; OpenStreetMap contributors',\n      minZoom: 0,\n      maxZoom: 30,\n    }).addTo(map);\n\n    const customIcon = L.icon({\n      iconUrl: markerIcon, // Custom marker icon URL\n      iconSize: [80, 112], // size of the icon\n      iconAnchor: [40, 90], // point of the icon which will correspond to marker's location\n      popupAnchor: [-3, -76],\n    });\n\n    let delay = 0; // Delay for animating markers\n\n    markerData.sort((a: MarkerData, b: MarkerData) => new Date(a.date).getTime() - new Date(b.date).getTime()); // Sort markers by date\n\n    markerData.forEach((marker, index) => {\n      const { lat, lon, city, date } = marker;\n      const markerOptions = { icon: customIcon };\n\n      setTimeout(() => {\n        const mapMarker = new Marker([lat, lon], markerOptions)\n          .bindPopup(`<b>${city}</b><br>Date: ${date}`)\n          .addTo(map);\n      }, delay);\n\n      delay += 1000; // Increase the delay for each marker by 1 second\n    });\n\n    return () => {\n      map.remove();\n    };\n  }, []);\n\n  const handleSliderChange = (value: number) => {\n    setSliderValue(value);\n  };\n\n  return (\n    <div>\n      <Slider\n        min={0}\n        max={markerData.length - 1}\n        value={sliderValue}\n        onChange={handleSliderChange}\n      />\n      <div id=\"map\" style={{ height: '500px', width: '100%' }}></div>\n    </div>\n  );\n};\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}