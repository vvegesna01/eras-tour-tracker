{"ast":null,"code":"var _jsxFileName = \"/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/Map.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport L, { Marker } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport markerIcon from './marker-icon.png'; // Import a custom marker icon if desired\n\nimport markerData from './data/date_testing.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  const [sliderValue, setSliderValue] = useState(0);\n  const [markerVisibility, setMarkerVisibility] = useState([]);\n  const [dates, setDates] = useState([]);\n  useEffect(() => {\n    const markers = [];\n    const map = L.map('map').setView([33.529115, -112.264551], 13);\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Map data &copy; OpenStreetMap contributors',\n      minZoom: 0,\n      maxZoom: 30\n    }).addTo(map);\n    const customIcon = L.icon({\n      iconUrl: markerIcon,\n      // Custom marker icon URL\n      iconSize: [80, 112],\n      // size of the icon\n      iconAnchor: [40, 90],\n      // point of the icon which will correspond to marker's location\n      popupAnchor: [-3, -76]\n    });\n    markerData.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime()); // Sort markers by date\n\n    const sortedDates = markerData.map(marker => marker.date);\n    setDates(sortedDates);\n    markerData.forEach((marker, index) => {\n      const {\n        lat,\n        lon,\n        city,\n        date\n      } = marker;\n      const markerOptions = {\n        icon: customIcon\n      };\n      const mapMarker = new Marker([lat, lon], markerOptions).bindPopup(`<b>${city}</b><br>Date: ${date}`).addTo(map);\n      markers.push(mapMarker);\n      setMarkerVisibility(prevVisibility => [...prevVisibility, true]);\n    });\n    return () => {\n      map.remove();\n    };\n  }, []);\n  const handleSliderChange = value => {\n    if (typeof value === 'number') {\n      setSliderValue(value);\n\n      // Update the visibility state of each marker\n      setMarkerVisibility(prevVisibility => prevVisibility.map((_, index) => index <= value));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Slider, {\n      min: 0,\n      max: dates.length - 1,\n      value: sliderValue,\n      onChange: handleSliderChange,\n      marks: dates.reduce((acc, date, index) => {\n        acc[index] = {\n          label: date\n        };\n        return acc;\n      }, {})\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: '500px',\n        width: '100%'\n      },\n      children: markers.map((marker, index) => markerVisibility[index] ? marker.addTo(map) : marker.removeFrom(map))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"aPTMTarkQzT8O6Tg81XJRtct06E=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","L","Marker","Slider","markerIcon","markerData","jsxDEV","_jsxDEV","Map","_s","sliderValue","setSliderValue","markerVisibility","setMarkerVisibility","dates","setDates","markers","map","setView","tileLayer","attribution","minZoom","maxZoom","addTo","customIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","sort","a","b","Date","date","getTime","sortedDates","marker","forEach","index","lat","lon","city","markerOptions","mapMarker","bindPopup","push","prevVisibility","remove","handleSliderChange","value","_","children","min","max","length","onChange","marks","reduce","acc","label","fileName","_jsxFileName","lineNumber","columnNumber","id","style","height","width","removeFrom","_c","$RefreshReg$"],"sources":["/Users/prameelavegesna/Desktop/Coding/basic-eras-map/src/Map.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport L, { Marker } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nimport markerIcon from './marker-icon.png'; // Import a custom marker icon if desired\n\nimport markerData from './data/date_testing.json';\n\ninterface MarkerData {\n  lat: number;\n  lon: number;\n  city: string;\n  date: string;\n}\n\nconst Map: React.FC = () => {\n  const [sliderValue, setSliderValue] = useState(0);\n  const [markerVisibility, setMarkerVisibility] = useState<boolean[]>([]);\n  const [dates, setDates] = useState<string[]>([]);\n\n  useEffect(() => {\n    const markers: Marker[] = [];\n    const map = L.map('map').setView([33.529115, -112.264551], 13);\n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Map data &copy; OpenStreetMap contributors',\n      minZoom: 0,\n      maxZoom: 30,\n    }).addTo(map);\n\n    const customIcon = L.icon({\n      iconUrl: markerIcon, // Custom marker icon URL\n      iconSize: [80, 112], // size of the icon\n      iconAnchor: [40, 90], // point of the icon which will correspond to marker's location\n      popupAnchor: [-3, -76],\n    });\n\n    markerData.sort(\n      (a: MarkerData, b: MarkerData) =>\n        new Date(a.date).getTime() - new Date(b.date).getTime()\n    ); // Sort markers by date\n\n    const sortedDates = markerData.map((marker) => marker.date);\n    setDates(sortedDates);\n\n    markerData.forEach((marker, index) => {\n      const { lat, lon, city, date } = marker;\n      const markerOptions = { icon: customIcon };\n\n      const mapMarker = new Marker([lat, lon], markerOptions)\n        .bindPopup(`<b>${city}</b><br>Date: ${date}`)\n        .addTo(map);\n\n      markers.push(mapMarker);\n      setMarkerVisibility((prevVisibility) => [...prevVisibility, true]);\n    });\n\n    return () => {\n      map.remove();\n    };\n  }, []);\n\n  const handleSliderChange = (value: number | number[]) => {\n    if (typeof value === 'number') {\n      setSliderValue(value);\n\n      // Update the visibility state of each marker\n      setMarkerVisibility((prevVisibility) =>\n        prevVisibility.map((_, index) => index <= value)\n      );\n    }\n  };\n\n  return (\n    <div>\n      <Slider\n        min={0}\n        max={dates.length - 1}\n        value={sliderValue}\n        onChange={handleSliderChange}\n        marks={dates.reduce((acc, date, index) => {\n          acc[index] = { label: date };\n          return acc;\n        }, {})}\n      />\n      <div id=\"map\" style={{ height: '500px', width: '100%' }}>\n        {markers.map((marker, index) =>\n          markerVisibility[index] ? marker.addTo(map) : marker.removeFrom(map)\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Map;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,CAAC,IAAIC,MAAM,QAAQ,SAAS;AACnC,OAAO,0BAA0B;AACjC,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAO,4BAA4B;AAEnC,OAAOC,UAAU,MAAM,mBAAmB,CAAC,CAAC;;AAE5C,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASlD,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAY,EAAE,CAAC;EACvE,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAW,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMiB,OAAiB,GAAG,EAAE;IAC5B,MAAMC,GAAG,GAAGhB,CAAC,CAACgB,GAAG,CAAC,KAAK,CAAC,CAACC,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,CAAC;IAE9DjB,CAAC,CAACkB,SAAS,CAAC,oDAAoD,EAAE;MAChEC,WAAW,EAAE,4CAA4C;MACzDC,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE;IACX,CAAC,CAAC,CAACC,KAAK,CAACN,GAAG,CAAC;IAEb,MAAMO,UAAU,GAAGvB,CAAC,CAACwB,IAAI,CAAC;MACxBC,OAAO,EAAEtB,UAAU;MAAE;MACrBuB,QAAQ,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC;MAAE;MACrBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;MAAE;MACtBC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;IACvB,CAAC,CAAC;IAEFxB,UAAU,CAACyB,IAAI,CACb,CAACC,CAAa,EAAEC,CAAa,KAC3B,IAAIC,IAAI,CAACF,CAAC,CAACG,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG,IAAIF,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC,CAACC,OAAO,CAAC,CAC1D,CAAC,CAAC,CAAC;;IAEH,MAAMC,WAAW,GAAG/B,UAAU,CAACY,GAAG,CAAEoB,MAAM,IAAKA,MAAM,CAACH,IAAI,CAAC;IAC3DnB,QAAQ,CAACqB,WAAW,CAAC;IAErB/B,UAAU,CAACiC,OAAO,CAAC,CAACD,MAAM,EAAEE,KAAK,KAAK;MACpC,MAAM;QAAEC,GAAG;QAAEC,GAAG;QAAEC,IAAI;QAAER;MAAK,CAAC,GAAGG,MAAM;MACvC,MAAMM,aAAa,GAAG;QAAElB,IAAI,EAAED;MAAW,CAAC;MAE1C,MAAMoB,SAAS,GAAG,IAAI1C,MAAM,CAAC,CAACsC,GAAG,EAAEC,GAAG,CAAC,EAAEE,aAAa,CAAC,CACpDE,SAAS,CAAE,MAAKH,IAAK,iBAAgBR,IAAK,EAAC,CAAC,CAC5CX,KAAK,CAACN,GAAG,CAAC;MAEbD,OAAO,CAAC8B,IAAI,CAACF,SAAS,CAAC;MACvB/B,mBAAmB,CAAEkC,cAAc,IAAK,CAAC,GAAGA,cAAc,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC,CAAC;IAEF,OAAO,MAAM;MACX9B,GAAG,CAAC+B,MAAM,CAAC,CAAC;IACd,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,kBAAkB,GAAIC,KAAwB,IAAK;IACvD,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC7BvC,cAAc,CAACuC,KAAK,CAAC;;MAErB;MACArC,mBAAmB,CAAEkC,cAAc,IACjCA,cAAc,CAAC9B,GAAG,CAAC,CAACkC,CAAC,EAAEZ,KAAK,KAAKA,KAAK,IAAIW,KAAK,CACjD,CAAC;IACH;EACF,CAAC;EAED,oBACE3C,OAAA;IAAA6C,QAAA,gBACE7C,OAAA,CAACJ,MAAM;MACLkD,GAAG,EAAE,CAAE;MACPC,GAAG,EAAExC,KAAK,CAACyC,MAAM,GAAG,CAAE;MACtBL,KAAK,EAAExC,WAAY;MACnB8C,QAAQ,EAAEP,kBAAmB;MAC7BQ,KAAK,EAAE3C,KAAK,CAAC4C,MAAM,CAAC,CAACC,GAAG,EAAEzB,IAAI,EAAEK,KAAK,KAAK;QACxCoB,GAAG,CAACpB,KAAK,CAAC,GAAG;UAAEqB,KAAK,EAAE1B;QAAK,CAAC;QAC5B,OAAOyB,GAAG;MACZ,CAAC,EAAE,CAAC,CAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACFzD,OAAA;MAAK0D,EAAE,EAAC,KAAK;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAhB,QAAA,EACrDpC,OAAO,CAACC,GAAG,CAAC,CAACoB,MAAM,EAAEE,KAAK,KACzB3B,gBAAgB,CAAC2B,KAAK,CAAC,GAAGF,MAAM,CAACd,KAAK,CAACN,GAAG,CAAC,GAAGoB,MAAM,CAACgC,UAAU,CAACpD,GAAG,CACrE;IAAC;MAAA4C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvD,EAAA,CA7EID,GAAa;AAAA8D,EAAA,GAAb9D,GAAa;AA+EnB,eAAeA,GAAG;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}